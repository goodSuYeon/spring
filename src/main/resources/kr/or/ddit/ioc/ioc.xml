<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- UserDao, UserService -->
	<!-- bean : 스프링 bean을 선언할 때 사용 
		        id: 스프링컨테이너에서 관리할 때 사용할 스프링 bean의 이름 (중복X)
		        class: 헤딩 스프링 bean을 생성하기 위한 구현체 클래스 (full name)
	-->
	<!-- userDao 스프링 bean 선언 
		 UserDaoImpl userDao = new UserDaoImpl() 과 같다! 즉, 객체를 스프링프레임워크에서 만들어준다
	-->
	<bean id="userDao" class="kr.or.ddit.user.repository.UserDaoimpl" />
		
	<!-- userService 스프링 bean 선언 
		 UserService userService = new UserServiceImpl();
		 userService.getUser("brown") -> 에러발생

		 property == file, setter
		 		  value : 문자열, 숫자
		  		  ref   : 다른 스프링 bean, 주입 받고싶은 스프링 bean이름을 기술함
		  		  		  property엘리맨트를 이용해 다른 스프링 bean을 DI(=주입)
		  UserService userService = new UserServiceImpl();
		  userService.getUserDao(userDao);
	-->
	<bean id="userService" class="kr.or.ddit.user.service.UserServiceimpl" >
		<property name="userDao" ref="userDao"/>
	</bean>
	
	<!-- 생성자 주입 -->
	<bean id="userServiceCons" class="kr.or.ddit.user.service.UserServiceimpl" >
		<constructor-arg ref="userDao"></constructor-arg>
	</bean>
	
	<!-- prototype: 해당 bean을 DL,DI 할 때마다  -->
	<bean id="userServicePrototype" class="kr.or.ddit.user.service.UserServiceimpl"
		  scope="prototype" >
		<property name="userDao" ref="userDao"/>
	</bean>
	
	<!-- list, set, map 컬렉션객체를 스프링 bean을 등록 가능 -->
	<bean id="collectionBean" class="kr.or.ddit.ioc.CollectionBean">
		<property name="list" >
			<list>
				<value>brown</value>
				<value>sally</value>
				<value>cony</value>
			</list>
		</property>
		<property name="map" >
			<map>
				<entry key="userid" value="brown" />   <!-- entry란? map은 key,value로 구성. 그 두개를 entry로 관리한다 -->
				<entry key="usernm" value="브라운" />
			</map>
		</property>
		<property name="set" >
			<set>
				<value>brown</value>
				<value>sally</value>
				<value>cony</value>
			</set>
		</property>
		<property name="properties">
			<props>
				<prop key="userid">brown</prop>
				<prop key="usernm">브라운</prop>
			</props>
		</property>
	</bean>
	
	<!-- properties 파일의 값을 스프링 bean값으로 주입하기 -->
	<!-- property-placeholder는 설정한 파일의 값만 로딩하는 것이 아니라 OS의 환경변수도 같이 로딩한다
		 그래서 dbinfo.properties에 선언한 username 속성은 OS의 사용자이름에 해당하는 환경변수와 겹친다.
	 -->
 	<context:property-placeholder location="classpath:/kr/or/ddit/config/db/dbinfo.properties"
 	 system-properties-mode="NEVER" />
 	<bean id="dbConfig" class="kr.or.ddit.ioc.DbConfig" >
 		<property name="url" value="${jdbc.url}" />     <!-- property는 필드값 -->
 		<property name="driverClassName" value="${jdbc.driverClassName}" />
 		<property name="username" value="${jdbc.username}"/>
 		<property name="password" value="${jdbc.password}"/>
 	</bean>
 	
</beans>

